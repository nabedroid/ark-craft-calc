services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    environment:
      BACKEND_ALLOWED_ORIGIN: ${BACKEND_ALLOWED_ORIGIN}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /app
          ignore:
            - node_modules/
    depends_on:
      db:
        condition: service_healthy
  db:
    container_name: ${MYSQL_HOST}
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 10
